{"version":3,"file":"static/js/432.289591f0.chunk.js","mappings":"gNAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,KAAPD,CAAH,yI,iSCyBjBE,EAASC,EAAAA,OACL,CACNC,KAAMD,EAAAA,SAAaE,SAAS,YAC5BC,MAAOH,EAAAA,SAEJE,SAAS,YACTC,MAAM,qCACTC,SAAUJ,EAAAA,SAAaE,SAAS,YAAYG,IAAI,EAAG,sBAEpDH,WA0IH,UAxIqB,WAAO,IAAD,MACzB,GAA4CI,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYd,GACtBe,cAAe,CACbb,KAAM,GACNE,MAAO,GACPC,SAAU,MATZW,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAUTE,EAAU,mCAAG,WAAMC,GAAN,iEACjBZ,GAASa,EAAAA,EAAAA,IAAaD,IAEtBJ,IAHiB,2CAAH,sDAchB,OACE,UAAC,IAAD,CAAWM,MAAM,SAAjB,WACE,SAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,2BAIA,UAAC,IAAD,CACEC,UAAU,OACVC,aAAa,MACbC,YAAU,EACVC,SAAUb,EAAaI,GACvBU,GAAI,CACFC,MAAO,QACPC,OAAQ,oBACRC,QAAS,YACTC,QAAS,OACTC,cAAe,SACfC,IAAK,OACLC,MAAO,WAZX,WAeE,SAAC,KAAD,kBACMtB,EAAS,SADf,IAEEuB,GAAG,OACHC,MAAM,OACNrC,UAAQ,EACRsC,KAAK,QACLC,QAAOvB,EAAOjB,KACdyC,YAAY,UAAAxB,EAAOjB,YAAP,eAAa0C,UAAW,QAGtC,SAAC,KAAD,kBACM5B,EAAS,UADf,IAEEuB,GAAG,QACHC,MAAM,QACNC,KAAK,QACLI,YAAY,mBACZpB,QAAQ,WACRtB,UAAQ,EACRuC,QAAOvB,EAAOf,MACduC,YAAY,UAAAxB,EAAOf,aAAP,eAAcwC,UAAW,uBAGvC,UAAC,IAAD,CAAanB,QAAQ,WAArB,WACE,SAAC,IAAD,CACEqB,QAAQ,8BACR3C,UAAQ,EACRsC,KAAK,QACLC,QAAOvB,EAAOd,SAJhB,uBAQA,SAAC,KAAD,kBACMW,EAAS,aADf,IAEEuB,GAAG,8BACHC,MAAM,WACNO,KAAMvC,EAAiB,OAAS,WAChCL,UAAQ,EACRsC,KAAK,QACLO,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,CACE,aAAW,6BACXC,QAvEgB,WAC9BzC,GAAmBD,EACpB,EAsEe2C,YApEgB,SAAAC,GAC9BA,EAAMC,gBACP,EAmEeC,KAAK,MAJP,SAMG9C,GAAiB,SAAC,MAAD,KAAyB,SAAC,MAAD,YAKnD,SAAC,IAAD,CACEkC,QAAOvB,EAAOd,SACdkC,GAAG,8BAFL,UAIG,UAAApB,EAAOd,gBAAP,eAAiBuC,UAAW,UAIjC,SAAC,IAAD,CACEnB,QAAQ,YACRgB,KAAK,QACLc,SAAS,SAAC,MAAD,CAAYC,MAAO,CAAEC,WAAY,UAC1CnB,MAAM,UACNS,KAAK,SALP,uBAUA,UAAC,IAAD,CACEtB,QAAQ,UACRU,QAAQ,OACRuB,eAAe,SACfrB,IAAI,MAJN,sCAOE,SAAC,IAAD,CAAYsB,GAAG,SAAf,6BAKT,C","sources":["components/StyledLink.styled.js","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: #1384e7;\n  font-weight: 600;\n\n  &:hover {\n    color: #025fb0;\n    text-decoration: underline;\n  }\n`;\n","import { FaUserPlus } from 'react-icons/fa';\nimport { BsFillEyeFill, BsFillEyeSlashFill } from 'react-icons/bs';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\nimport { registerUser } from '../redux/auth/operations';\n\nimport {\n  Box,\n  Button,\n  Container,\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n  Typography,\n} from '@mui/material';\n// import { Box } from '@mui/system';\n\nimport { useState } from 'react';\nimport { StyledLink } from 'components/StyledLink.styled';\n\nconst schema = yup\n  .object({\n    name: yup.string().required('Required'),\n    email: yup\n      .string()\n      .required('Required')\n      .email('Invalid format (example@mail.com)'),\n    password: yup.string().required('Required').min(6, 'minimum 6 symbol'),\n  })\n  .required();\n\nconst RegisterForm = () => {\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n  });\n\n  const handleForm = async data => {\n    dispatch(registerUser(data));\n\n    reset();\n  };\n\n  const handleClickShowPassword = () => {\n    setIsShowPassword(!isShowPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return (\n    <Container align=\"center\">\n      <Typography variant=\"h2\" gutterBottom>\n        Registration\n      </Typography>\n\n      <Box\n        component=\"form\"\n        autoComplete=\"off\"\n        noValidate\n        onSubmit={handleSubmit(handleForm)}\n        sx={{\n          width: '260px',\n          border: '2px solid #1384e7',\n          padding: '30px 20px',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '15px',\n          color: '#000000',\n        }}\n      >\n        <TextField\n          {...register('name')}\n          id=\"name\"\n          label=\"Name\"\n          required\n          size=\"small\"\n          error={errors.name ? true : false}\n          helperText={errors.name?.message || ' '}\n        />\n\n        <TextField\n          {...register('email')}\n          id=\"email\"\n          label=\"Email\"\n          size=\"small\"\n          placeholder=\"example@mail.com\"\n          variant=\"outlined\"\n          required\n          error={errors.email ? true : false}\n          helperText={errors.email?.message || 'example@mail.com'}\n        />\n\n        <FormControl variant=\"outlined\">\n          <InputLabel\n            htmlFor=\"outlined-adornment-password\"\n            required\n            size=\"small\"\n            error={errors.password ? true : false}\n          >\n            Password\n          </InputLabel>\n          <OutlinedInput\n            {...register('password')}\n            id=\"outlined-adornment-password\"\n            label=\"Password\"\n            type={isShowPassword ? 'text' : 'password'}\n            required\n            size=\"small\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {isShowPassword ? <BsFillEyeSlashFill /> : <BsFillEyeFill />}\n                </IconButton>\n              </InputAdornment>\n            }\n          ></OutlinedInput>\n          <FormHelperText\n            error={errors.password ? true : false}\n            id=\"outlined-adornment-password\"\n          >\n            {errors.password?.message || ' '}\n          </FormHelperText>\n        </FormControl>\n\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          endIcon={<FaUserPlus style={{ marginLeft: '10px' }} />}\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Add User\n        </Button>\n\n        <Typography\n          variant=\"caption\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          gap=\"5px\"\n        >\n          Already have an account?\n          <StyledLink to=\"/login\">Sign in</StyledLink>\n        </Typography>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n"],"names":["StyledLink","styled","Link","schema","yup","name","required","email","password","min","useState","isShowPassword","setIsShowPassword","dispatch","useDispatch","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","reset","errors","formState","handleForm","data","registerUser","align","variant","gutterBottom","component","autoComplete","noValidate","onSubmit","sx","width","border","padding","display","flexDirection","gap","color","id","label","size","error","helperText","message","placeholder","htmlFor","type","endAdornment","position","onClick","onMouseDown","event","preventDefault","edge","endIcon","style","marginLeft","justifyContent","to"],"sourceRoot":""}