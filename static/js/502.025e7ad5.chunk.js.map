{"version":3,"file":"static/js/502.025e7ad5.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","hooks/useContacts.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectSortMethod = state => state.sortMethod;\n\nexport const selectSortedContacts = createSelector(\n  [selectContacts, selectSortMethod],\n  (contacts, sortMethod) => {\n    switch (sortMethod) {\n      case 'asc':\n        return [...contacts].sort((a, b) => a.name.localeCompare(b.name));\n      case 'desc':\n        return [...contacts].sort((a, b) => b.name.localeCompare(a.name));\n\n      default:\n        return contacts;\n    }\n  }\n);\n\nexport const selectFilteredContacts = createSelector(\n  [selectSortedContacts, selectFilter],\n  (selectSortedContacts, filter) => {\n    const filteredContacts = !filter\n      ? selectSortedContacts\n      : selectSortedContacts.filter(({ name }) =>\n          name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n        );\n\n    return filteredContacts;\n  }\n);\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n  selectFilter,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectFilteredContacts);\n  const filter = useSelector(selectFilter);\n\n  return {\n    isLoading,\n    error,\n    contacts,\n    filter,\n  };\n};\n","import { ToastContainer, toast, cssTransition } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'animate.css/animate.min.css';\n\nimport { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\n\nimport { Box, Button, TextField } from '@mui/material';\nimport { Stack } from '@mui/system';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport { useContacts } from 'hooks/useContacts';\n\nconst schema = yup\n  .object({\n    name: yup.string().required('Required'),\n    number: yup\n      .string('Must be a valid phone number')\n      .phone('UA')\n      .required('Required'),\n  })\n  .required();\n\nexport default function ContactForm({ onSubmit }) {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n\n  const inputNameRef = useRef();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      name: '',\n      number: '',\n    },\n  });\n\n  const handleForm = data => {\n    let { name } = data;\n\n    name = name[0].toUpperCase() + name.substring(1);\n\n    if (contacts.find(contact => contact?.name === name)) {\n      const warnToastId = 'toast-id';\n      const bounce = cssTransition({\n        enter: 'animate__animated animate__bounceIn',\n        exit: 'animate__animated animate__bounceOut',\n      });\n\n      toast.warn(`${name} is already in contacts`, {\n        transition: bounce,\n        dragable: true,\n        position: toast.POSITION.TOP_RIGHT,\n        toastId: warnToastId,\n        autoClose: 2000,\n      });\n      return;\n    }\n\n    dispatch(addContact({ ...data, name }));\n\n    reset();\n    inputNameRef.current.focus();\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        autoComplete=\"off\"\n        noValidate\n        maxWidth=\"500px\"\n        padding=\"16px 20px\"\n        border=\"2px solid #1384e7\"\n        align=\"center\"\n        marginBottom=\"16px\"\n        onSubmit={handleSubmit(handleForm)}\n      >\n        <Stack direction=\"row\" gap=\"10px\" justifyContent=\"space-between\">\n          <TextField\n            {...register('name')}\n            id=\"name\"\n            label=\"Name\"\n            variant=\"outlined\"\n            required\n            size=\"small\"\n            inputRef={inputNameRef}\n            error={errors.name ? true : false}\n            helperText={errors.name?.message || ' '}\n          />\n\n          <TextField\n            {...register('number')}\n            id=\"number\"\n            label=\"Number\"\n            variant=\"outlined\"\n            required\n            size=\"small\"\n            placeholder=\"0661234567\"\n            error={errors.number ? true : false}\n            helperText={errors.number ? 'Must be a valid phone number' : ' '}\n          />\n        </Stack>\n\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\">\n          Add contact\n        </Button>\n      </Box>\n      <ToastContainer style={{ fontSize: '18px' }} />\n    </>\n  );\n}\n","import { IconButton, TableCell } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const StyledTableCell = styled(TableCell)`\n  font-size: 16px;\n  padding: 0 10px;\n  background-color: #fefefe;\n  border: 1px solid black;\n\n  &:nth-of-type(2) {\n    width: 30%;\n  }\n  &:nth-of-type(3) {\n    width: 20%;\n    text-align: center;\n    padding: 0;\n  }\n  &.MuiTableCell-head {\n    font-size: 24px;\n    font-weight: 700;\n    background-color: #d9d9d9;\n    color: #1384e7;\n    padding: 10px;\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  &:hover {\n    background-color: transparent;\n    color: #000000;\n  }\n`;\n","// import css from './ContactList.module.css';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\n\nimport { RiDeleteBinFill } from 'react-icons/ri';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { StyledIconButton, StyledTableCell } from './ContactList.styled';\n\nimport { useContacts } from 'hooks/useContacts';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <TableContainer\n      sx={{\n        maxWidth: '768px',\n        margin: '20px 0',\n        borderBottom: '1px solid black',\n        borderCollapse: 'collapse',\n      }}\n    >\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow>\n            <StyledTableCell variant=\"head\" align=\"center\">\n              Name\n            </StyledTableCell>\n            <StyledTableCell variant=\"head\" align=\"center\">\n              Phone\n            </StyledTableCell>\n            <StyledTableCell variant=\"head\" align=\"center\">\n              Delete\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {contacts.map(({ id, name, number }) => {\n            return (\n              <TableRow key={id}>\n                <StyledTableCell>{name}</StyledTableCell>\n                <StyledTableCell>{number}</StyledTableCell>\n                <StyledTableCell>\n                  <StyledIconButton onClick={() => handleDeleteContact(id)}>\n                    <RiDeleteBinFill />\n                  </StyledIconButton>\n                </StyledTableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const CustomIcon = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  InputLabel,\n  OutlinedInput,\n  Radio,\n  RadioGroup,\n  Stack,\n} from '@mui/material';\n\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { setSort } from 'redux/contacts/sortSlice';\n\nimport {\n  FcAlphabeticalSortingAz,\n  FcAlphabeticalSortingZa,\n} from 'react-icons/fc';\nimport { RiCloseCircleLine } from 'react-icons/ri';\n\nimport { CustomIcon } from './Filter.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const { filter } = useContacts();\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const handleSortChange = event => {\n    dispatch(setSort(event.currentTarget.value));\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\" width=\"100%\">\n      <FormControl variant=\"outlined\" size=\"small\" sx={{ maxWidth: '260px' }}>\n        <InputLabel htmlFor=\"input-filter\">Find contacts by name</InputLabel>\n        <OutlinedInput\n          id=\"input-filter\"\n          label=\"Find contacts by name\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </FormControl>\n      <FormControl>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n          <FormLabel id=\"sorted-contacts\">Sorted:</FormLabel>\n          <RadioGroup\n            row\n            aria-labelledby=\"sorted-contacts\"\n            defaultValue=\"nosort\"\n            name=\"radio-button-group\"\n            onChange={handleSortChange}\n          >\n            <Stack direction=\"row\" spacing={1}>\n              <FormControlLabel\n                value=\"nosort\"\n                control={<Radio size=\"small\" />}\n                label={\n                  <CustomIcon>\n                    <RiCloseCircleLine size=\"2em\" />\n                  </CustomIcon>\n                }\n              />\n\n              <FormControlLabel\n                value=\"asc\"\n                control={<Radio size=\"small\" />}\n                label={\n                  <CustomIcon>\n                    <FcAlphabeticalSortingAz size=\"2em\" />\n                  </CustomIcon>\n                }\n              />\n\n              <FormControlLabel\n                value=\"desc\"\n                control={<Radio size=\"small\" />}\n                sx={{ display: 'flex', alignItems: 'center' }}\n                label={\n                  <CustomIcon>\n                    <FcAlphabeticalSortingZa size=\"2em\" />\n                  </CustomIcon>\n                }\n              />\n            </Stack>\n          </RadioGroup>\n        </Stack>\n      </FormControl>\n    </Stack>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchContacts } from '../redux/contacts/operations';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Stack } from '@mui/system';\nimport { useContacts } from 'hooks/useContacts';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const { contacts, isLoading, error } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Stack\n      justifyContent=\"start\"\n      alignItems=\"center\"\n      sx={{ height: 'calc(100vh - 102px - 16px)' }}\n    >\n      <ContactForm />\n      <Filter />\n      {contacts.length > 0 && <ContactList />}\n      {isLoading && (\n        <Stack position=\"absolute\" top=\"240px\" zIndex=\"100\">\n          <Loader />\n        </Stack>\n      )}\n      {error && <p>{error}</p>}\n    </Stack>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectIsLoading","state","contacts","isLoading","selectError","error","selectFilter","filter","selectSortedContacts","createSelector","items","sortMethod","sort","a","b","name","localeCompare","selectFilteredContacts","toLocaleLowerCase","includes","useContacts","useSelector","schema","yup","required","number","phone","ContactForm","onSubmit","dispatch","useDispatch","inputNameRef","useRef","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","reset","errors","formState","Box","component","autoComplete","noValidate","maxWidth","padding","border","align","marginBottom","data","toUpperCase","substring","find","contact","bounce","cssTransition","enter","exit","toast","transition","dragable","position","toastId","autoClose","addContact","current","focus","Stack","direction","gap","justifyContent","TextField","id","label","variant","size","inputRef","helperText","message","placeholder","Button","color","type","style","fontSize","StyledTableCell","styled","TableCell","StyledIconButton","IconButton","ContactList","TableContainer","sx","margin","borderBottom","borderCollapse","Table","stickyHeader","TableHead","TableRow","TableBody","map","onClick","deleteContact","handleDeleteContact","CustomIcon","Filter","width","FormControl","InputLabel","htmlFor","OutlinedInput","value","onChange","event","setFilter","target","alignItems","spacing","FormLabel","RadioGroup","row","defaultValue","setSort","currentTarget","FormControlLabel","control","Radio","display","useEffect","fetchContacts","height","length","top","zIndex","Loader"],"sourceRoot":""}