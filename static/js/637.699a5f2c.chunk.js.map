{"version":3,"file":"static/js/637.699a5f2c.chunk.js","mappings":"gNAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,KAAPD,CAAH,yI,gPCoBjBE,EAASC,EAAAA,OACL,CACNC,MAAOD,EAAAA,SAAaE,SAAS,YAAYD,MAAM,kBAC/CE,SAAUH,EAAAA,SAAaE,SAAS,cAEjCA,WAsHH,UApHc,WAAO,IAAD,EAClB,GAA4CE,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYZ,GACtBa,cAAe,CACbX,MAAO,GACPE,SAAU,MARZU,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAsBf,OACE,UAAC,IAAD,CAAWE,MAAM,SAAjB,WACE,SAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,oBAIA,UAAC,IAAD,CACEC,UAAU,OACVC,aAAa,MACbC,YAAU,EACVC,SAAUV,GAfG,SAAAW,GACjBlB,GAASmB,EAAAA,EAAAA,IAAMD,IACfV,GACD,IAaKY,GAAI,CACFC,MAAO,QACPC,OAAQ,oBACRC,QAAS,YACTC,QAAS,OACTC,cAAe,SACfC,IAAK,QAXT,WAcE,SAAC,KAAD,kBACMpB,EAAS,UADf,IAEEqB,GAAG,QACHC,MAAM,QACNC,YAAY,mBACZjB,QAAQ,WACRjB,UAAQ,EACRmC,KAAK,QACLC,QAAOtB,EAAOf,MACdsC,YAAY,UAAAvB,EAAOf,aAAP,eAAcuC,UAAW,QAGvC,UAAC,IAAD,CAAarB,QAAQ,WAArB,WACE,SAAC,IAAD,CACEsB,QAAQ,8BACRvC,UAAQ,EACRmC,KAAK,QAHP,uBAOA,SAAC,KAAD,kBACMxB,EAAS,aADf,IAEEqB,GAAG,8BACHC,MAAM,WACNO,KAAMrC,EAAiB,OAAS,WAChCH,UAAQ,EACRmC,KAAK,QACLM,cACE,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACE,SAAC,IAAD,CACE,aAAW,6BACXC,QAhEgB,WAC9BvC,GAAmBD,EACpB,EA+DeyC,YA7DgB,SAAAC,GAC9BA,EAAMC,gBACP,EA4DeC,KAAK,MAJP,SAMG5C,GAAiB,SAAC,MAAD,KAAyB,SAAC,MAAD,eAOrD,SAAC,IAAD,CACEc,QAAQ,YACRkB,KAAK,QACLa,MAAM,UACNR,KAAK,SACLf,GAAI,CAAEwB,UAAW,QALnB,qBAUA,UAAC,IAAD,CACEhC,QAAQ,UACRY,QAAQ,OACRqB,eAAe,SACfnB,IAAI,MAJN,kCAOE,SAAC,IAAD,CAAYoB,GAAG,YAAf,8BAKT,C","sources":["components/StyledLink.styled.js","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: #1384e7;\n  font-weight: 600;\n\n  &:hover {\n    color: #025fb0;\n    text-decoration: underline;\n  }\n`;\n","import { BsFillEyeFill, BsFillEyeSlashFill } from 'react-icons/bs';\n\nimport {\n  Box,\n  Button,\n  Container,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n  Typography,\n} from '@mui/material';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useState } from 'react';\nimport { StyledLink } from 'components/StyledLink.styled';\n\nconst schema = yup\n  .object({\n    email: yup.string().required('Required').email('Invalid format'),\n    password: yup.string().required('Required'),\n  })\n  .required();\n\nconst Login = () => {\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const handleClickShowPassword = () => {\n    setIsShowPassword(!isShowPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleForm = data => {\n    dispatch(logIn(data));\n    reset();\n  };\n\n  return (\n    <Container align=\"center\">\n      <Typography variant=\"h2\" gutterBottom>\n        Login\n      </Typography>\n\n      <Box\n        component=\"form\"\n        autoComplete=\"off\"\n        noValidate\n        onSubmit={handleSubmit(handleForm)}\n        sx={{\n          width: '260px',\n          border: '2px solid #1384e7',\n          padding: '30px 20px',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '20px',\n        }}\n      >\n        <TextField\n          {...register('email')}\n          id=\"email\"\n          label=\"Email\"\n          placeholder=\"example@mail.com\"\n          variant=\"outlined\"\n          required\n          size=\"small\"\n          error={errors.email ? true : false}\n          helperText={errors.email?.message || ' '}\n        />\n\n        <FormControl variant=\"outlined\">\n          <InputLabel\n            htmlFor=\"outlined-adornment-password\"\n            required\n            size=\"small\"\n          >\n            Password\n          </InputLabel>\n          <OutlinedInput\n            {...register('password')}\n            id=\"outlined-adornment-password\"\n            label=\"password\"\n            type={isShowPassword ? 'text' : 'password'}\n            required\n            size=\"small\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {isShowPassword ? <BsFillEyeSlashFill /> : <BsFillEyeFill />}\n                </IconButton>\n              </InputAdornment>\n            }\n          ></OutlinedInput>\n        </FormControl>\n\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"primary\"\n          type=\"submit\"\n          sx={{ marginTop: '30px' }}\n        >\n          Log In\n        </Button>\n\n        <Typography\n          variant=\"caption\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          gap=\"5px\"\n        >\n          Not have an account?\n          <StyledLink to=\"/register\">Register</StyledLink>\n        </Typography>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["StyledLink","styled","Link","schema","yup","email","required","password","useState","isShowPassword","setIsShowPassword","dispatch","useDispatch","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","reset","errors","formState","align","variant","gutterBottom","component","autoComplete","noValidate","onSubmit","data","logIn","sx","width","border","padding","display","flexDirection","gap","id","label","placeholder","size","error","helperText","message","htmlFor","type","endAdornment","position","onClick","onMouseDown","event","preventDefault","edge","color","marginTop","justifyContent","to"],"sourceRoot":""}